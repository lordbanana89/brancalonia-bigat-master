{
  "_id": "Ar4vgQwQKE9KyL4t",
  "name": "🎪 Intrattenimento Taverna",
  "type": "script",
  "author": "brancalonia",
  "img": "icons/tools/instruments/lute-gold-brown.webp",
  "scope": "global",
  "command": "// Macro per Intrattenimento in Taverna\nif (!game.modules.get('brancalonia-bigat')?.active) {\n  ui.notifications.error('Modulo Brancalonia non attivo!');\n  return;\n}\n\nconst entertainment = game.brancalonia?.TavernEntertainment;\nif (!entertainment) {\n  ui.notifications.error('Sistema Intrattenimento non disponibile!');\n  return;\n}\n\nconst tokens = canvas.tokens.controlled;\nif (tokens.length === 0) {\n  ui.notifications.warn('Seleziona un token!');\n  return;\n}\n\nconst actor = tokens[0].actor;\n\nnew Dialog({\n  title: '🎪 Intrattenimento in Taverna',\n  content: `\n    <div style=\"padding: 10px;\">\n      <h3>${actor.name} si esibisce!</h3>\n      <div style=\"margin: 15px 0;\">\n        <label for=\"performance-type\" style=\"font-weight: bold;\">Tipo di Esibizione:</label>\n        <select id=\"performance-type\" style=\"width: 100%; margin-top: 5px;\">\n          <option value=\"music\">🎵 Musica</option>\n          <option value=\"storytelling\">📖 Racconti</option>\n          <option value=\"juggling\">🤹 Giocoleria</option>\n          <option value=\"comedy\">😄 Commedia</option>\n          <option value=\"dance\">💃 Danza</option>\n          <option value=\"magic-tricks\">✨ Trucchi di Magia</option>\n        </select>\n      </div>\n      <div style=\"margin: 15px 0;\">\n        <label for=\"crowd-mood\" style=\"font-weight: bold;\">Umore del Pubblico:</label>\n        <select id=\"crowd-mood\" style=\"width: 100%; margin-top: 5px;\">\n          <option value=\"hostile\">😠 Ostile</option>\n          <option value=\"bored\">😑 Annoiato</option>\n          <option value=\"neutral\" selected>😐 Neutrale</option>\n          <option value=\"interested\">🙂 Interessato</option>\n          <option value=\"excited\">😃 Eccitato</option>\n        </select>\n      </div>\n      <div style=\"margin: 15px 0;\">\n        <label for=\"tavern-quality\" style=\"font-weight: bold;\">Qualità della Taverna:</label>\n        <select id=\"tavern-quality\" style=\"width: 100%; margin-top: 5px;\">\n          <option value=\"dive\">🏚️ Bettola</option>\n          <option value=\"common\" selected>🏠 Comune</option>\n          <option value=\"quality\">🏛️ Di Qualità</option>\n          <option value=\"noble\">👑 Nobile</option>\n        </select>\n      </div>\n      <hr>\n      <p style=\"text-align: center; font-style: italic;\">\"Un buon spettacolo vale più di cento monete!\"</p>\n    </div>\n  `,\n  buttons: {\n    perform: {\n      icon: '<i class=\"fas fa-microphone\"></i>',\n      label: 'Esibisciti!',\n      callback: async (html) => {\n        const type = html.find('#performance-type').val();\n        const mood = html.find('#crowd-mood').val();\n        const quality = html.find('#tavern-quality').val();\n        \n        // Calcola modificatori\n        const moodMod = {hostile: -5, bored: -2, neutral: 0, interested: 2, excited: 5}[mood];\n        const qualityMod = {dive: -2, common: 0, quality: 2, noble: 4}[quality];\n        \n        // Tira Performance\n        const roll = await actor.rollSkill('prf', {\n          flavor: `Esibizione: ${type}`,\n          situational: moodMod + qualityMod\n        });\n        \n        const total = roll.total;\n        let result, earnings;\n        \n        if (total >= 20) {\n          result = \"Spettacolare! Il pubblico è in delirio!\";\n          earnings = 3 + Math.floor(Math.random() * 3) + 1;\n        } else if (total >= 15) {\n          result = \"Ottima esibizione! Applausi scroscianti!\";\n          earnings = 2 + Math.floor(Math.random() * 2);\n        } else if (total >= 10) {\n          result = \"Discreta esibizione. Qualche applauso.\";\n          earnings = 1 + Math.floor(Math.random() * 2);\n        } else if (total >= 5) {\n          result = \"Esibizione mediocre. Poco interesse.\";\n          earnings = Math.floor(Math.random() * 2);\n        } else {\n          result = \"Disastro! Ti fischiano e lanciano ortaggi!\";\n          earnings = 0;\n          // Possibilità di rissa\n          if (Math.random() < 0.3) {\n            ChatMessage.create({\n              content: `<div class=\"brancalonia-event\">\n                <h3>⚠️ Rissa in arrivo!</h3>\n                <p>Il pubblico è talmente infuriato che sta per scoppiare una rissa!</p>\n              </div>`\n            });\n          }\n        }\n        \n        ChatMessage.create({\n          content: `<div class=\"brancalonia-performance\">\n            <h3>🎭 ${actor.name} - ${type}</h3>\n            <p><strong>Risultato:</strong> ${result}</p>\n            ${earnings > 0 ? `<p><strong>Guadagno:</strong> ${earnings} monete d'oro</p>` : ''}\n          </div>`,\n          speaker: ChatMessage.getSpeaker({actor: actor})\n        });\n        \n        if (earnings > 0) {\n          actor.update({'system.currency.gp': actor.system.currency.gp + earnings});\n        }\n      }\n    },\n    gamble: {\n      icon: '<i class=\"fas fa-dice\"></i>',\n      label: 'Gioca d\\'Azzardo',\n      callback: () => {\n        entertainment.startGambling(actor);\n      }\n    },\n    drink: {\n      icon: '<i class=\"fas fa-beer\"></i>',\n      label: 'Gara di Bevute',\n      callback: () => {\n        entertainment.drinkingContest(actor);\n      }\n    },\n    cancel: {\n      icon: '<i class=\"fas fa-times\"></i>',\n      label: 'Chiudi'\n    }\n  },\n  default: 'perform'\n}).render(true);",
  "folder": null,
  "sort": 100013,
  "ownership": {
    "default": 0
  },
  "flags": {
    "brancalonia-bigat": {
      "category": "social"
    }
  },
  "_stats": {
    "systemId": "dnd5e",
    "systemVersion": "3.3.1",
    "coreVersion": "13.0.0",
    "createdTime": 1700000013000,
    "modifiedTime": 1700000013000,
    "lastModifiedBy": "brancalonia"
  },
  "_key": "!macros!brancalonia014",
  "system": {}
}