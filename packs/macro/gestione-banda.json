{
  "_id": "banda001",
  "name": "‚öîÔ∏è Gestione Compagnia di Ventura",
  "type": "script",
  "author": "Brancalonia",
  "img": "icons/environment/people/group.webp",
  "scope": "global",
  "command": "// GESTIONE COMPAGNIA DI VENTURA\\n// Sistema completo per gestire la propria banda\\n\\nconst actor = game.user.character || canvas.tokens.controlled[0]?.actor;\\nif (!actor) {\\n  ui.notifications.warn(\\\"Seleziona un personaggio!\\\");\\n  return;\\n}\\n\\n// Recupera dati banda\\nlet banda = actor.getFlag(\\\"world\\\", \\\"banda\\\") || {\\n  nome: \\\"Nuova Compagnia\\\",\\n  membri: 5,\\n  morale: 10,\\n  tesoro: 0,\\n  specialisti: []\\n};\\n\\n// Tipi di specialisti\\nconst specialisti = {\\n  \\\"Medico\\\": { costo: 50, effetto: \\\"Cura 1d4 PF dopo ogni battaglia\\\" },\\n  \\\"Esploratore\\\": { costo: 30, effetto: \\\"Vantaggio su Percezione in viaggio\\\" },\\n  \\\"Cuoco\\\": { costo: 20, effetto: \\\"+1 Morale al giorno\\\" },\\n  \\\"Fabbro\\\": { costo: 40, effetto: \\\"Ripara equipaggiamento scadente\\\" },\\n  \\\"Musico\\\": { costo: 25, effetto: \\\"Vantaggio su Intrattenere\\\" },\\n  \\\"Spia\\\": { costo: 60, effetto: \\\"Informazioni sui nemici\\\" }\\n};\\n\\n// Funzione per calcolare mantenimento\\nfunction getMantenimento() {\\n  const base = banda.membri * 2;\\n  const spec = banda.specialisti.length * 10;\\n  return base + spec;\\n}\\n\\n// Dialog principale\\nnew Dialog({\\n  title: \\\"Gestione Compagnia di Ventura\\\",\\n  content: `\\n    <h2>‚öîÔ∏è ${banda.nome}</h2>\\n    <div style=\\\"display: grid; grid-template-columns: 1fr 1fr; gap: 10px;\\\">\\n      <div>\\n        <p><strong>Membri:</strong> ${banda.membri}</p>\\n        <p><strong>Morale:</strong> ${banda.morale}/20</p>\\n      </div>\\n      <div>\\n        <p><strong>Tesoro:</strong> ${banda.tesoro} ducati</p>\\n        <p><strong>Mantenimento:</strong> ${getMantenimento()} ducati/settimana</p>\\n      </div>\\n    </div>\\n    <hr>\\n    <h3>Specialisti</h3>\\n    <ul>\\n      ${banda.specialisti.length > 0 ? \\n        banda.specialisti.map(s => `<li>${s}</li>`).join(\\\"\\\\n\\\") :\\n        \\\"<li><em>Nessuno</em></li>\\\"\\n      }\\n    </ul>\\n    <hr>\\n    <h3>Azioni</h3>\\n  `,\\n  buttons: {\\n    recluta: {\\n      label: \\\"Recluta Membri\\\",\\n      callback: async () => {\\n        const roll = await new Roll(\\\"1d6\\\").evaluate({async: true});\\n        banda.membri += roll.total;\\n        await actor.setFlag(\\\"world\\\", \\\"banda\\\", banda);\\n        \\n        ChatMessage.create({\\n          speaker: ChatMessage.getSpeaker({actor}),\\n          content: `<h3>‚öîÔ∏è Reclutamento</h3>\\n          <p>Hai reclutato [[${roll.total}]] nuovi membri!</p>\\n          <p>Totale membri: ${banda.membri}</p>`\\n        });\\n      }\\n    },\\n    specialista: {\\n      label: \\\"Assumi Specialista\\\",\\n      callback: () => {\\n        const buttons2 = {};\\n        for (let [tipo, info] of Object.entries(specialisti)) {\\n          if (!banda.specialisti.includes(tipo)) {\\n            buttons2[tipo] = {\\n              label: `${tipo} (${info.costo} ducati)`,\\n              callback: async () => {\\n                if (banda.tesoro >= info.costo) {\\n                  banda.tesoro -= info.costo;\\n                  banda.specialisti.push(tipo);\\n                  await actor.setFlag(\\\"world\\\", \\\"banda\\\", banda);\\n                  \\n                  ChatMessage.create({\\n                    speaker: ChatMessage.getSpeaker({actor}),\\n                    content: `<h3>ü§ù Nuovo Specialista!</h3>\\n                    <p>Hai assunto un <strong>${tipo}</strong></p>\\n                    <p><em>${info.effetto}</em></p>\\n                    <p>Costo: ${info.costo} ducati</p>`\\n                  });\\n                } else {\\n                  ui.notifications.warn(\\\"Fondi insufficienti!\\\");\\n                }\\n              }\\n            };\\n          }\\n        }\\n        \\n        new Dialog({\\n          title: \\\"Assumi Specialista\\\",\\n          buttons: buttons2\\n        }).render(true);\\n      }\\n    },\\n    paga: {\\n      label: \\\"Paga Stipendi\\\",\\n      callback: async () => {\\n        const costo = getMantenimento();\\n        if (banda.tesoro >= costo) {\\n          banda.tesoro -= costo;\\n          banda.morale = Math.min(20, banda.morale + 1);\\n          await actor.setFlag(\\\"world\\\", \\\"banda\\\", banda);\\n          \\n          ChatMessage.create({\\n            speaker: ChatMessage.getSpeaker({actor}),\\n            content: `<h3>üí∞ Pagamento Stipendi</h3>\\n            <p>Hai pagato ${costo} ducati di stipendi.</p>\\n            <p>Il morale sale a ${banda.morale}!</p>`\\n          });\\n        } else {\\n          banda.morale = Math.max(0, banda.morale - 2);\\n          await actor.setFlag(\\\"world\\\", \\\"banda\\\", banda);\\n          \\n          ChatMessage.create({\\n            speaker: ChatMessage.getSpeaker({actor}),\\n            content: `<h3>‚ö†Ô∏è Mancato Pagamento!</h3>\\n            <p style=\\\"color:red;\\\">Non puoi pagare gli stipendi!</p>\\n            <p>Il morale scende a ${banda.morale}!</p>\\n            ${banda.morale <= 5 ? \\\"<p><strong>Attenzione: rischio diserzione!</strong></p>\\\" : \\\"\\\"}`\\n          });\\n        }\\n      }\\n    },\\n    battaglia: {\\n      label: \\\"Risolvi Battaglia\\\",\\n      callback: async () => {\\n        const roll = await new Roll(\\\"1d20\\\").evaluate({async: true});\\n        const modificatore = Math.floor(banda.membri / 5) + Math.floor(banda.morale / 5);\\n        const totale = roll.total + modificatore;\\n        \\n        let risultato = \\\"\\\";\\n        let perdite = 0;\\n        let bottino = 0;\\n        \\n        if (totale >= 15) {\\n          risultato = \\\"Vittoria Totale!\\\";\\n          bottino = new Roll(\\\"3d20\\\").evaluate({async: false}).total;\\n          banda.morale = Math.min(20, banda.morale + 2);\\n        } else if (totale >= 10) {\\n          risultato = \\\"Vittoria Minore\\\";\\n          bottino = new Roll(\\\"2d20\\\").evaluate({async: false}).total;\\n          perdite = new Roll(\\\"1d4\\\").evaluate({async: false}).total;\\n          banda.morale = Math.min(20, banda.morale + 1);\\n        } else if (totale >= 5) {\\n          risultato = \\\"Pareggio\\\";\\n          bottino = new Roll(\\\"1d20\\\").evaluate({async: false}).total;\\n          perdite = new Roll(\\\"1d6\\\").evaluate({async: false}).total;\\n          banda.morale = Math.max(0, banda.morale - 1);\\n        } else {\\n          risultato = \\\"Sconfitta!\\\";\\n          perdite = new Roll(\\\"2d6\\\").evaluate({async: false}).total;\\n          banda.morale = Math.max(0, banda.morale - 3);\\n        }\\n        \\n        banda.membri = Math.max(0, banda.membri - perdite);\\n        banda.tesoro += bottino;\\n        await actor.setFlag(\\\"world\\\", \\\"banda\\\", banda);\\n        \\n        ChatMessage.create({\\n          speaker: ChatMessage.getSpeaker({actor}),\\n          content: `<h3>‚öîÔ∏è Risultato Battaglia</h3>\\n          <p>Tiro: [[${roll.total}]] + ${modificatore} = <strong>${totale}</strong></p>\\n          <p><strong>${risultato}</strong></p>\\n          <hr>\\n          <p>Perdite: ${perdite} membri</p>\\n          <p>Bottino: ${bottino} ducati</p>\\n          <p>Morale: ${banda.morale}/20</p>\\n          <p>Membri rimasti: ${banda.membri}</p>`\\n        });\\n      }\\n    },\\n    close: {\\n      label: \\\"Chiudi\\\",\\n      icon: \\\"<i class='fas fa-times'></i>\\\"\\n    }\\n  },\\n  default: \\\"close\\\"\\n}).render(true);",
  "ownership": {
    "default": 0
  },
  "flags": {
    "core": {
      "sourceId": "Macro.banda001"
    }
  },
  "_stats": {
    "systemId": "dnd5e",
    "systemVersion": "3.3.1",
    "coreVersion": "13.347"
  }
}